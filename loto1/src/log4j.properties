#### Usando 2 appenders, 1 para logar no console, outro para um arquivo
log4j.rootCategory=INFO, fileOut, htmlOut

# Explicita a herança do nivel de prioridade
#log4j.category.your.category.name=INHERITED

#### O primeiro appender escreve no console
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Pattern que mostra o nome do arquivo e numero da linha.
#log4j.appender.stdout.layout.ConversionPattern=sisaf: %-2d{dd/MM/yyyy HH:mm:sss} %5p [%t] (%F:%L) - %m%n
#log4j.appender.stdout.layout.ConversionPattern=opio: %-2d{dd/MM/yyyy HH:mm:sss} [%t] - %m%n

#### O segundo appender escreve em um arquivo
log4j.appender.fileOut =org.apache.log4j.RollingFileAppender
log4j.appender.fileOut.File=../log/opio.log

# Controla o tamanho maximo do arquivo
log4j.appender.fileOut.MaxFileSize=100000KB

# Faz backup dos arquivos de log (apenas 1)
log4j.appender.fileOut.MaxBackupIndex=1

log4j.appender.fileOut.layout=org.apache.log4j.PatternLayout
log4j.appender.fileOut.layout.ConversionPattern=%-2d{dd/MM/yyyy HH:mm:sss} %5p - %m%n

#### O terceiro appender escreve em um arquivo html
log4j.appender.htmlOut =org.apache.log4j.RollingFileAppender
log4j.appender.htmlOut.File=../log/opio.html

log4j.appender.htmlOut.layout=org.apache.log4j.HTMLLayout
log4j.appender.htmlOut.layout.LocationInfo=true
log4j.appender.htmlOut.layout.Title=Message Management Log Info



## HIBERNATE ##

#log4j.logger.org.hibernate=warn
log4j.logger.org.hibernate=warn

### log HQL query parser activity
log4j.logger.org.hibernate.hql.ast.AST=warn

### log just the SQL
log4j.logger.org.hibernate.SQL=warn

### log JDBC bind parameters ###
log4j.logger.org.hibernate.type=warn
#log4j.logger.org.hibernate.type=warn

### log schema export/update ###
log4j.logger.org.hibernate.tool.hbm2ddl=warn

### log HQL parse trees
log4j.logger.org.hibernate.hql=warn

### log cache activity ###
log4j.logger.org.hibernate.cache=warn

### log transaction activity
log4j.logger.org.hibernate.transaction=warn

### log JDBC resource acquisition
log4j.logger.org.hibernate.jdbc=warn

### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
#log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace
log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=error